{"version":3,"sources":["containers/Calculator/Components/Button/index.jsx","containers/Calculator/Components/ButtonPannel/index.jsx","containers/Calculator/Components/Display/index.jsx","containers/Calculator/index.jsx","containers/Calculator/actions/index.js","containers/Calculator/actionTypes/index.js","containers/TodoList/models/todo.js","containers/TodoList/components/InputTodo/index.jsx","containers/TodoList/components/TodoListPanel/index.jsx","containers/TodoList/components/FilterPanel/index.jsx","containers/TodoList/components/ClearButton/index.jsx","containers/TodoList/components/ConfirmationModal/index.jsx","containers/TodoList/index.jsx","containers/TodoList/actions/index.js","containers/TodoList/actionTypes/index.js","containers/App.jsx","serviceWorker.js","containers/Calculator/models/index.js","containers/Calculator/reducers/index.js","containers/TodoList/models/index.js","containers/TodoList/reducers/index.js","reducers/index.js","models/index.js","store/index.js","index.js"],"names":["Button","_this$props","this","props","onClick","name","react_default","a","createElement","react","className","value","_ref","target","Component","defaultProps","ButtonPannel","Components_Button","PureComponent","Display","Number","display","numberSelected","RegExp","operatorSelected","Calculator","handleClick","_this","clear","equal","match","number","operatorDisplay","operator","showDisplay","firstOperationNumber","secondOperationNumber","Components_Display","Components_ButtonPannel","Link","to","connect","state","dispatch","type","payload","pressNumber","clickOperator","TaskModel","Record","description","isDone","id","InputTodo","nextProps","onSubmit","todo","handleTask","htmlFor","placeholder","onChange","TodoListPanel","list","handleDone","map","task","index","key","onDoubleClick","data-value","FiltersPanel","numberOfItems","selectedFilter","unCompletedClass","completedClass","allClass","concat","NavLink","pathname","activeClassName","search","exact","ClearButton","ConfirmationModal","isVisible","setVisibility","setState","closeModalWithEsc","e","keyCode","document","addEventListener","removeEventListener","nextState","_this2","console","log","message","onAccept","title","modal","onKeyPress","stopPropagation","children","TodoList","preventDefault","submitTask","toggleTask","dataset","handleClear","handleModal","modalIsOpen","goToHome","history","push","location","filterParam","URLSearchParams","get","filteredList","listOfTasks","filter","onKeyDown","components_ConfirmationModal","components_ClearButton","components_InputTodo","components_TodoListPanel","FilterPanel","handleFilter","size","inputTask","Todo","App","Switch","Route","path","component","Boolean","window","hostname","initialStateCalculator","symbolToOperate","+","b","-","*","/","arguments","length","undefined","action","set","selectedOperator","resultOperation","String","error","initialTodoModel","List","update","taskList","tasklist","findIndex","combineReducers","initialState","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","HashRouter","es","src_containers_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"meAIMA,sMAUK,IAAAC,EAKHC,KAAKC,MAFPC,EAHKH,EAGLG,QACAC,EAJKJ,EAILI,KAGF,OACEC,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,UACEE,UAAU,cACVC,MAAQN,EACRD,QAAU,SAAAQ,GAAA,IAAGC,EAAHD,EAAGC,OAAH,OAAgBT,EAAQS,EAAOF,SAExCN,WAxBUS,cAAfd,EAMGe,aAAe,CACpBV,KAAM,IAwBKL,QC/BTgB,mLAUK,IAELZ,EACEF,KAAKC,MADPC,QAEF,OACEE,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,mBAAmBL,KAAK,IAAID,QAAUA,KAE1DE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,mBAAmBL,KAAK,IAAID,QAAUA,KAE1DE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,mBAAmBL,KAAK,IAAID,QAAUA,KAE1DE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,gBAAgBL,KAAK,IAAID,QAAUA,IACrDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,eAAeL,KAAK,IAAID,QAAUA,IACpDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,eAAeL,KAAK,IAAID,QAAUA,IACpDE,EAAAC,EAAAC,cAACS,EAAD,CAAQP,UAAU,mBAAmBL,KAAK,IAAID,QAAUA,aAtCvCc,iBAArBF,EAMGD,aAAe,CACpBV,KAAM,IAsCKW,QCvBAG,0LAfX,OACEb,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZR,KAAKC,MAAMQ,OAEdL,EAAAC,EAAAC,cAAA,OAAME,UAAU,kBACbU,OAAOlB,KAAKC,MAAMkB,mBAdTP,cCOhBQ,EAAiB,IAAIC,OAAO,aAC5BC,EAAmB,IAAID,OAAO,cAE9BE,6MAaJC,YAAc,SAACf,GACC,MAAVA,EACFgB,EAAKxB,MAAMyB,QACQ,MAAVjB,EACTgB,EAAKxB,MAAM0B,QACFlB,EAAMmB,MAAMR,GACrBK,EAAKxB,MAAM4B,OAAOpB,GACTA,EAAMmB,MAAMN,IAClBG,EAAKxB,MAAM6B,gBAAgBF,MAAMN,IACpCG,EAAKxB,MAAM0B,MAAMlB,GACjBgB,EAAKxB,MAAM8B,SAAStB,IAEpBgB,EAAKxB,MAAM8B,SAAStB,MAIxBuB,YAAc,kBAAMP,EAAKxB,MAAMgC,qBAC3BR,EAAKxB,MAAM6B,gBAAkBL,EAAKxB,MAAMiC,+FAG1C,OACE9B,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBAAf,gCACAJ,EAAAC,EAAAC,cAAC6B,EAAD,CAAS1B,MAAQT,KAAKgC,cACpBb,QAAUD,OAAOlB,KAAKC,MAAMiC,uBAAyBlC,KAAKC,MAAMgC,wBAElE7B,EAAAC,EAAAC,cAAC8B,EAAD,CAAclC,QAAUF,KAAKwB,cAE7BpB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAAf,iBACIJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAMC,GAAG,KAAT,IAAclC,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAlB,QAAd,aA3CWI,aAgEV2B,cAPS,SAACC,GAAD,MAAY,CAClCP,qBAAsBO,EAAMjB,WAAWU,qBACvCC,sBAAuBM,EAAMjB,WAAWW,sBACxCJ,gBAAiBU,EAAMjB,WAAWQ,WAVT,SAAAU,GAAQ,MAAK,CACtCf,MAAO,kBAAMe,ECxDuB,CACpCC,KCTyB,cDUzBC,QAASlC,IAFe,IAACA,GDyDzBkB,MAAO,kBAAMc,ECpDuB,CACpCC,KCbyB,cDczBC,QAASlC,IAFe,IAACA,GDqDzBoB,OAAQ,SAACpB,GAAD,OAAWgC,EC/DM,SAAChC,GAAD,MAAY,CACrCiC,KCL0B,eDM1BC,QAASlC,GD6DmBmC,CAAYnC,KACxCsB,SAAU,SAACtB,GAAD,OAAWgC,ECjDM,SAAChC,GAAD,MAAY,CACvCiC,KCjB6B,kBDkB7BC,QAASlC,GD+CqBoC,CAAcpC,OAU/B8B,CAA6ChB,WG5E/CuB,EAAYC,YAAO,CAC9BC,YAAa,GACbC,QAAQ,EACRC,GAAI,ICqCSC,uMA9BSC,GACpB,OAAIpD,KAAKC,MAAMoD,WAAaD,EAAUC,UAClCrD,KAAKC,MAAMqD,OAASF,EAAUE,sCAK3B,IAAAvD,EAKHC,KAAKC,MAHPqD,EAFKvD,EAELuD,KACAC,EAHKxD,EAGLwD,WACAF,EAJKtD,EAILsD,SAGF,OACEjD,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,QAAM+C,SAAWA,GACfjD,EAAAC,EAAAC,cAAA,SAAOkD,QAAQ,OAAOhD,UAAU,kBAAhC,UACAJ,EAAAC,EAAAC,cAAA,SAAOoC,KAAK,OACVe,YAAY,yBACZjD,UAAU,iBACVC,MAAQ6C,EACRI,SAAWH,aA9BC3C,cC6BT+C,0LAvBJ,IAAA5D,EAIHC,KAAKC,MAFP2D,EAFK7D,EAEL6D,KACAC,EAHK9D,EAGL8D,WAGF,OACEzD,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACXoD,EAAKE,IAAI,SAACC,EAAMC,GAAP,OACR5D,EAAAC,EAAAC,cAAA,MAAI2D,IAAMD,EACRxD,UAAYuD,EAAKd,OAAS,OAAS,UACnCiB,cAAgBL,EAChBM,aAAaJ,EAAKb,IAEjBa,EAAKf,uBApBUhC,0BCiDboD,uMAzCShB,GACpB,OAAIpD,KAAKC,MAAMoE,gBAAkBjB,EAAUiB,eACvCrE,KAAKC,MAAMqE,iBAAmBlB,EAAUkB,gDAIrC,IAAAvE,EACmCC,KAAKC,MAAvCoE,EADDtE,EACCsE,cAAeC,EADhBvE,EACgBuE,eACjBC,EAAuC,gBAAnBD,EAAoC,WAAa,WACrEE,EAAqC,cAAnBF,EAAkC,WAAa,WACjEG,EAA+B,OAAnBH,EAA2B,WAAa,WAM1D,OACElE,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBAAf,IANyB,GAAAkE,OAAUL,EAAf,IAAlBA,EAAuB,QAC3B,UAKE,KACAjE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAASrC,GAAK,CAAEsC,SAAU,aAAgBC,gBAAkBJ,GAC1DrE,EAAAC,EAAAC,cAAA,OAAK6D,aAAW,OAAhB,QAIF/D,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAASrC,GAAK,CAAEsC,SAAU,YAAaE,OAAQ,uBAA0BD,gBAAkBN,GACzFnE,EAAAC,EAAAC,cAAA,OAAK6D,aAAW,eAAhB,gBAIF/D,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAASrC,GAAK,CAAEwC,OAAQ,qBAAwBC,OAAQ,EAAOF,gBAAkBL,GAC/EpE,EAAAC,EAAAC,cAAA,OAAK6D,aAAW,aAAhB,uBAtCevD,cCmBZoE,yMAdX,OAAO,mCAIP,OACE5E,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQE,UAAU,eAAlB,iBAZkBI,cC0EXqE,oNAlEbzC,MAAQ,CACN0C,WAAW,KAGbC,cAAgB,SAACD,GACfzD,EAAK2D,SAAS,CAAEF,iBAGlBG,kBAAoB,SAACC,GACD,KAAdA,EAAEC,SACJ9D,EAAK0D,eAAc,wFAKrBK,SAASC,iBAAiB,UAAWzF,KAAKqF,kEAI1CG,SAASE,oBAAoB,UAAW1F,KAAKqF,iEAGzBjC,EAAWuC,GAC/B,OAAI3F,KAAKwC,MAAM0C,YAAcS,EAAUT,2CAIhC,IAAAU,EAAA5F,KAEP6F,QAAQC,IAAI,gBAFL,IAAA/F,EAG0CC,KAAKC,MAA9C8F,EAHDhG,EAGCgG,QAASC,EAHVjG,EAGUiG,SAAUX,EAHpBtF,EAGoBsF,kBAErBY,EAAK,6BAAAvB,OAAgCqB,GAErCG,EAAQlG,KAAKwC,MAAM0C,WACvB9E,EAAAC,EAAAC,cAAA,OACEE,UAAU,aACV2F,WAAad,EACbnF,QAAU,kBAAM0F,EAAKT,eAAc,KAEnC/E,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaN,QAAU,SAAAoF,GAAC,OAAIA,EAAEc,oBAC3ChG,EAAAC,EAAAC,cAAA,UAAQE,UAAU,aAAaN,QAAU,kBAAM0F,EAAKT,eAAc,KAAlE,KACA/E,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAgByF,GAC9B7F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQJ,QAAU,kBAAM0F,EAAKT,eAAc,IAAS3E,UAAU,kBAA9D,QAGAJ,EAAAC,EAAAC,cAAA,UAAQJ,QAAU8F,EAAWxF,UAAU,mBAAvC,UAQR,OACEJ,EAAAC,EAAAC,cAAA,WACG4F,EACD9F,EAAAC,EAAAC,cAAA,OAAKJ,QAAU,kBAAM0F,EAAKT,eAAc,KACrCnF,KAAKC,MAAMoG,kBAnEUzF,cCS1B0F,oNAYJ9D,MAAQ,CACNuB,KAAM,GACNb,GAAI,KAGNK,WAAa,SAAA+B,GAAO7D,EAAK2D,SAAS,CAAErB,KAAMuB,EAAE3E,OAAOF,WAEnD4C,SAAW,SAAAiC,GACTA,EAAEiB,iBACF9E,EAAKxB,MAAMuG,WAAW,IAAI1D,EAAU,CAAEE,YAAavB,EAAKe,MAAMuB,KAAMb,KAAMzB,EAAKe,MAAMU,MACrFzB,EAAK2D,SAAS,CAAErB,KAAM,QAGxBF,WAAa,SAACyB,GAAQ7D,EAAKxB,MAAMwG,WAAWnB,EAAE3E,OAAO+F,QAAQjG,UAE7DkG,YAAc,WAAQlF,EAAKxB,MAAMyB,QAASD,EAAK2D,SAAS,CAAElC,GAAI,OAE9D0D,YAAc,WAAQnF,EAAK2D,SAAS,CAAEyB,aAAcpF,EAAKe,MAAMqE,iBAE/DC,SAAW,WAAQrF,EAAKxB,MAAM8G,QAAQC,KAAK,6FAGzC,OAAO,mCAGA,IAECC,EAAajH,KAAKC,MAAlBgH,SACFC,EAAc,IAAIC,gBAAgBF,EAASnC,QAAQsC,IAAI,UACvDC,EAAerH,KAAKC,MAAMqH,YAAYC,OAAO,SAACxD,GAClD,MAAoB,cAAhBmD,GAAsD,IAAhBnD,EAAKd,OAC3B,gBAAhBiE,IAAwD,IAAhBnD,EAAKd,SAInD,OACE7C,EAAAC,EAAAC,cAAA,OAAKkH,UAAYxH,KAAKqF,mBACpBjF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aAAd,SACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBACbJ,EAAAC,EAAAC,cAACmH,EAAD,CAAmB1B,QAAQ,yBAAyBC,SAAWhG,KAAK2G,aAClEvG,EAAAC,EAAAC,cAACoH,EAAD,QAGJtH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAACqH,EAAD,CAAWrE,KAAOtD,KAAKwC,MAAMuB,KAC3BR,WAAavD,KAAKuD,WAClBF,SAAWrD,KAAKqD,WAClBjD,EAAAC,EAAAC,cAACsH,EAAD,CAAe/D,WAAa7D,KAAK6D,WAAaD,KAAOyD,IACrDjH,EAAAC,EAAAC,cAACuH,EAAD,CAAa3H,QAAUF,KAAK8H,aAC1BzD,cAAgBgD,EAAaU,KAC7BzD,eAAiB4C,KAEpBlH,KAAKC,MAAMqH,YAAYS,MAAQ,EAC5B3H,EAAAC,EAAAC,cAACmH,EAAD,CAAmB1B,QAAQ,SAASC,SAAWhG,KAAK8G,UACpD1G,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAAlB,aAEAJ,EAAAC,EAAAC,cAAA,UAAQJ,QAAUF,KAAK8G,SAAWtG,UAAU,cAA5C,kBApEWI,cAsFR2B,cALS,SAACC,GAAD,MAAY,CAClCwF,UAAWxF,EAAMyF,KAAKD,UACtBV,YAAa9E,EAAMyF,KAAKX,cARC,SAAA7E,GAAQ,MAAK,CACtCf,MAAO,kBAAMe,EChFsB,CACnCC,KCRmB,QDSnBC,QAASiB,IAFe,IAACA,GDiFzB4C,WAAY,SAAC/F,GAAD,OAAWgC,ECtFY,CACnCC,KCJsB,WDKtBC,QDoF2ClC,KAC3CgG,WAAY,SAAChG,GAAD,OAAWgC,EC7EU,CACjCC,KCfyB,cDgBzBC,QD2E2ClC,OAQ9B8B,CAA6C+D,GG5D7C4B,mLA7BX,OACE9H,EAAAC,EAAAC,cAACC,EAAA,SAAD,KACEH,EAAAC,EAAAC,cAAA,QAAME,UAAU,QACdJ,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAOrD,OAAQ,EAAOsD,KAAK,KACzBjI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACbJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,YAAd,sCACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAd,uBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,WACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAMC,GAAG,cACP9B,UAAU,cADZ,gBAGFJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cACZJ,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAMC,GAAG,YACP9B,UAAU,cADZ,mBAMRJ,EAAAC,EAAAC,cAAE8H,EAAA,EAAF,CAAQrD,OAAQ,EAAOsD,KAAK,cAAcC,UAAY/G,IACtDnB,EAAAC,EAAAC,cAAE8H,EAAA,EAAF,CAAQrD,OAAQ,EAAOsD,KAAK,YAAYC,UAAYhC,cAzB9C1F,aCME2H,QACW,cAA7BC,OAAOvB,SAASwB,UAEgB,UAA7BD,OAAOvB,SAASwB,UAEhBD,OAAOvB,SAASwB,SAAS7G,MAC1B,uECVS8G,EAAyB,IANP3F,YAAO,CACpCd,qBAAsB,EACtBC,sBAAuB,GACvBH,SAAU,MCHN4G,EAAkB,CACtBC,IAAK,SAACvI,EAAGwI,GAAJ,OAAUxI,EAAIwI,GACnBC,IAAK,SAACzI,EAAGwI,GAAJ,OAAUxI,EAAIwI,GACnBE,IAAK,SAAC1I,EAAGwI,GAAJ,OAAUxI,EAAIwI,GACnBG,IAAK,SAAC3I,EAAGwI,GAAJ,OAAUxI,EAAIwI,IAiDNtH,EA9CI,WAA4C,IAA3CiB,EAA2CyG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnCP,EAAwBU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,GAAoB,gBAAhBC,EAAO1G,MAC0B,IAA/BF,EAAMP,qBAA4B,OAAOO,EAAMd,QAErD,GAAoB,iBAAhB0H,EAAO1G,KAAyB,CAClC,GAAmC,IAA/BF,EAAMP,sBAAiD,KAAnBO,EAAMT,SAC5C,OAAOS,EACJ6G,IAAI,uBAAwBnI,OAAOkI,EAAOzG,UAC7C,GAAmC,IAA/BH,EAAMP,sBAAiD,KAAnBO,EAAMT,SAC9C,OAAOS,EACJ6G,IAAI,uBAAwBnI,OAAOsB,EAAMP,qBAAuBmH,EAAOzG,UAE5E,GAAuB,KAAnBH,EAAMT,UAAmD,IAAhCS,EAAMN,sBACjC,OAAOM,EACJ6G,IAAI,uBAAwB7G,EAAMP,sBAClCoH,IAAI,wBAAyBD,EAAOzG,SACpC0G,IAAI,WAAY7G,EAAMT,UACzB,GAAuB,KAAnBS,EAAMT,UAAmD,IAAhCS,EAAMN,sBACnC,OAAOM,EACJ6G,IAAI,uBAAwB7G,EAAMP,sBAClCoH,IAAI,wBAAyB7G,EAAMN,sBAAwBkH,EAAOzG,SAClE0G,IAAI,WAAY7G,EAAMT,UAE3B,GAAoB,oBAAhBqH,EAAO1G,KACX,OAAOF,EACJ6G,IAAI,uBAAwB7G,EAAMP,sBAClCoH,IAAI,WAAYD,EAAOzG,SAE5B,GAAoB,gBAAhByG,EAAO1G,KACT,IACE,GAAIF,EAAMT,UAAYS,EAAMN,sBAAuB,CACjD,IAAMoH,EAAmBX,EAAgBnG,EAAMT,UACzCwH,EAAkBC,OAAOF,EAAiBpI,OAAOsB,EAAMP,sBAC3Df,OAAOsB,EAAMN,yBACf,OAAOM,EACJ6G,IAAI,uBAAwBnI,OAAOqI,IACnCF,IAAI,wBAAyB,IAC7BA,IAAI,WAAY,KAErB,MAAOI,GACP,OAAOjH,EAAM6G,IAAI,uBAAwB,kBAG7C,OAAO7G,GC9CIkH,EAAmB,IAJP3G,YAAO,CAC9BuE,YAAaqC,iBCuBArD,EAxBE,WAAsC,IAArC9D,EAAqCyG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7BS,EAAkBN,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,MAAoB,UAAhBC,EAAO1G,KACFF,EAAMoH,OAAO,cAAe,SAAAC,GAAQ,OAAIA,EAASnI,UAEtC,aAAhB0H,EAAO1G,KACFF,EACJoH,OAAO,cAAe,SAAAC,GAAQ,OAAIA,EAAS7C,KAAKoC,EAAOzG,WAExC,gBAAhByG,EAAO1G,KAMFF,EACJoH,OAAO,cAAe,SAAAE,GACrB,IAAM9F,EAAQ8F,EAASC,UAAU,SAAAhG,GAAI,OAAIA,EAAKb,KAAOhC,OAAOkI,EAAOzG,WACnE,OAAOmH,EAASF,OAAO5F,EAAO,SAAAD,GAAI,OAAIA,EAAK6F,OAAO,SAAU,SAAA3G,GAAM,OAAKA,QAItET,GClBMwH,cAAgB,CAAEzI,aAAY0G,SCFhCgC,EAAe,CAC1B1I,WAAYmH,EACZT,KAAMyB,GCKOQ,EALDC,YACZC,EAAaH,EACbzB,OAAO6B,8BAAgC7B,OAAO6B,gCCIhDC,IAASC,OACPnK,EAAAC,EAAAC,cAACkK,EAAA,EAAD,KACEpK,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAUP,MAAQA,GAChB9J,EAAAC,EAAAC,cAACoK,EAAD,QAEWlF,SAASmF,eAAe,SRkHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1bf2021d.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    handleClick: PropTypes.func,\r\n    name: PropTypes.string\r\n  }\r\n\r\n  static defaultProps = {\r\n    name: ''\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      // eslint-disable-next-line react/prop-types\r\n      onClick,\r\n      name\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <button\r\n          className=\"ButtonStyle\"\r\n          value={ name }\r\n          onClick={ ({ target }) => onClick(target.value) }\r\n        >\r\n          {name}\r\n        </button>\r\n      </Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button/index.jsx';\r\n\r\nclass ButtonPannel extends PureComponent {\r\n  static propTypes = {\r\n    onClick: PropTypes.func,\r\n    name: PropTypes.string\r\n  }\r\n\r\n  static defaultProps = {\r\n    name: ''\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <div>\r\n          <Button className=\"Button-number\" name=\"7\" onClick={ onClick } />\r\n          <Button className=\"Button-number\" name=\"8\" onClick={ onClick } />\r\n          <Button className=\"Button-number\" name=\"9\" onClick={ onClick } />\r\n          <Button className=\"Button-operation\" name=\"/\" onClick={ onClick } />\r\n        </div>\r\n        <div>\r\n          <Button className=\"Button-number\" name=\"4\" onClick={ onClick } />\r\n          <Button className=\"Button-number\" name=\"5\" onClick={ onClick } />\r\n          <Button className=\"Button-number\" name=\"6\" onClick={ onClick } />\r\n          <Button className=\"Button-operation\" name=\"*\" onClick={ onClick } />\r\n        </div>\r\n        <div>\r\n          <Button className=\"Button-number\" name=\"1\" onClick={ onClick } />\r\n          <Button className=\"Button-number\" name=\"2\" onClick={ onClick } />\r\n          <Button className=\"Button-number\" name=\"3\" onClick={ onClick } />\r\n          <Button className=\"Button-operation\" name=\"-\" onClick={ onClick } />\r\n        </div>\r\n        <div>\r\n          <Button className=\"Button-number\" name=\"0\" onClick={ onClick } />\r\n          <Button className=\"Button-clear\" name=\"C\" onClick={ onClick } />\r\n          <Button className=\"Button-equal\" name=\"=\" onClick={ onClick } />\r\n          <Button className=\"Button-operation\" name=\"+\" onClick={ onClick } />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonPannel;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\n\r\nclass Display extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    display: PropTypes.number\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"Display\">\r\n          <div className=\"littleDisplay\">\r\n            {this.props.value}\r\n          </div>\r\n          < div className=\"DisplayContent\" >\r\n            {Number(this.props.display)}\r\n          </div >\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Display;","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport ButtonPannel from './Components/ButtonPannel';\r\nimport Display from './Components/Display';\r\nimport {\r\n  pressClear, pressEqual, pressNumber, clickOperator\r\n} from './actions';\r\n\r\nconst numberSelected = new RegExp(/([0-9]+)/g);\r\nconst operatorSelected = new RegExp(/([+/*-])/g);\r\n\r\nclass Calculator extends Component {\r\n  static propTypes = {\r\n    value: PropTypes.number,\r\n    clear: PropTypes.func,\r\n    equal: PropTypes.func,\r\n    number: PropTypes.func,\r\n    operator: PropTypes.func,\r\n    operatorDisplay: PropTypes.string,\r\n    firstOperationNumber: PropTypes.number,\r\n    secondOperationNumber: PropTypes.string,\r\n  }\r\n\r\n  // Para juntar utilidades de botones\r\n  handleClick = (value) => {\r\n    if (value === 'C') {\r\n      this.props.clear();\r\n    } else if (value === '=') {\r\n      this.props.equal();\r\n    } else if (value.match(numberSelected)) {\r\n      this.props.number(value);\r\n    } else if (value.match(operatorSelected)\r\n      && this.props.operatorDisplay.match(operatorSelected)) {\r\n      this.props.equal(value);\r\n      this.props.operator(value);\r\n    } else {\r\n      this.props.operator(value);\r\n    }\r\n  }\r\n\r\n  showDisplay = () => this.props.firstOperationNumber\r\n    + this.props.operatorDisplay + this.props.secondOperationNumber\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"Calculator\">\r\n          <div className=\"CalculatorName\">🐰Piwi🐰</div>\r\n          <Display value={ this.showDisplay() }\r\n            display={ Number(this.props.secondOperationNumber || this.props.firstOperationNumber) }\r\n          />\r\n          <ButtonPannel onClick={ this.handleClick }\r\n          />\r\n          <div className=\"CalculatorBrand\" >Laura Vargas</div>\r\n        </div><Link to=\"/\"> <button className=\"homeButton\">Home</button> </Link>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clear: () => dispatch(pressClear()),\r\n  equal: () => dispatch(pressEqual()),\r\n  number: (value) => dispatch(pressNumber(value)),\r\n  operator: (value) => dispatch(clickOperator(value))\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  firstOperationNumber: state.Calculator.firstOperationNumber,\r\n  secondOperationNumber: state.Calculator.secondOperationNumber,\r\n  operatorDisplay: state.Calculator.operator,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calculator);","import {\r\n  PRESS_NUMBER, PRESS_CLEAR, PRESS_EQUAL, SELECT_OPERATOR\r\n} from '../actionTypes';\r\n\r\nexport const pressNumber = (value) => ({\r\n  type: PRESS_NUMBER,\r\n  payload: value,\r\n});\r\n\r\nexport const pressClear = (value) => ({\r\n  type: PRESS_CLEAR,\r\n  payload: value,\r\n});\r\n\r\nexport const pressEqual = (value) => ({\r\n  type: PRESS_EQUAL,\r\n  payload: value,\r\n});\r\n\r\nexport const clickOperator = (value) => ({\r\n  type: SELECT_OPERATOR,\r\n  payload: value,\r\n});","export const PRESS_NUMBER = 'PRESS_NUMBER';\r\nexport const PRESS_CLEAR = 'PRESS_CLEAR';\r\nexport const PRESS_EQUAL = 'PRESS_EQUAL';\r\nexport const SELECT_OPERATOR = 'SELECT_OPERATOR';","import { Record } from 'immutable';\r\n\r\nexport const TaskModel = Record({\r\n  description: '',\r\n  isDone: false,\r\n  id: 0\r\n});","import React, { Component, Fragment } from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass InputTodo extends Component {\r\n\r\n  static propTypes = {\r\n    todo: PropTypes.string,\r\n    handleTask: PropTypes.func,\r\n    onSubmit: PropTypes.func\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.onSubmit !== nextProps.onSubmit) return true;\r\n    if (this.props.todo === nextProps.todo) return false;\r\n    return true;\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      todo,\r\n      handleTask,\r\n      onSubmit,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <form onSubmit={ onSubmit }>\r\n          <label htmlFor=\"todo\" className=\"inputTodoLabel\"> Todo </label>\r\n          <input type=\"text\"\r\n            placeholder=\"Whats need to be done?\"\r\n            className=\"inputTodoInput\"\r\n            value={ todo }\r\n            onChange={ handleTask }\r\n          />\r\n        </form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputTodo;","import React, { PureComponent } from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoListPanel extends PureComponent {\r\n  static propTypes = {\r\n    list: PropTypes.object,\r\n    handleDone: PropTypes.func,\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      list,\r\n      handleDone\r\n    } = this.props;\r\n\r\n    return (\r\n      <ul className=\"TodoListList\">\r\n        {list.map((task, index) => (\r\n          <li key={ index }\r\n            className={ task.isDone ? 'done' : 'notdone' }\r\n            onDoubleClick={ handleDone }\r\n            data-value={ task.id }\r\n          >\r\n            {task.description}\r\n          </li>\r\n        ))\r\n        }\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoListPanel;","import React, { Component, Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FiltersPanel extends Component {\r\n\r\n  static propTypes = {\r\n    numberOfItems: PropTypes.number,\r\n    selectedFilter: PropTypes.string\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (this.props.numberOfItems !== nextProps.numberOfItems) { return true; }\r\n    if (this.props.selectedFilter !== nextProps.selectedFilter) return true;\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    const { numberOfItems, selectedFilter } = this.props;\r\n    const unCompletedClass = (selectedFilter !== 'uncompleted') ? 'inactive' : 'isActive';\r\n    const completedClass = (selectedFilter !== 'completed') ? 'inactive' : 'isActive';\r\n    const allClass = (selectedFilter !== null) ? 'inactive' : 'isActive';\r\n    const itemsInList = () => {\r\n      if (numberOfItems === 1) { return `${numberOfItems} item`; }\r\n      return `${numberOfItems} items`;\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"filterPanelCounter\"> {itemsInList()} </div>\r\n        <div className=\"filterPanelMenu\">\r\n          <NavLink to={ { pathname: '/todolist' } } activeClassName={ allClass }>\r\n            <div data-value=\"all\">\r\n              All\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to={ { pathname: '/todolist', search: '?filter=uncompleted' } } activeClassName={ unCompletedClass } >\r\n            <div data-value=\"uncompleted\">\r\n              Uncompleted\r\n            </div>\r\n          </NavLink>\r\n          <NavLink to={ { search: '?filter=completed' } } exact={ true } activeClassName={ completedClass } >\r\n            <div data-value=\"completed\">\r\n              Completed\r\n            </div>\r\n          </NavLink>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FiltersPanel;","import React, { Component, Fragment } from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ClearButton extends Component {\r\n  static propTypes = {\r\n    handleModal: PropTypes.func\r\n  }\r\n\r\n  shouldComponentUpdate() {\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <button className=\"buttonClear\">\r\n          Clear\r\n        </button>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClearButton;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ConfirmationModal extends Component {\r\n  static propTypes = {\r\n    message: PropTypes.string,\r\n    onAccept: PropTypes.func,\r\n    closeModalWithEsc: PropTypes.func,\r\n    children: PropTypes.object\r\n  }\r\n\r\n  state = {\r\n    isVisible: false\r\n  }\r\n\r\n  setVisibility = (isVisible) => {\r\n    this.setState({ isVisible });\r\n  }\r\n\r\n  closeModalWithEsc = (e) => {\r\n    if (e.keyCode === 27) {\r\n      this.setVisibility(false);\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    document.addEventListener('keydown', this.closeModalWithEsc);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.closeModalWithEsc);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (this.state.isVisible !== nextState.isVisible) return true;\r\n    return false;\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log('conrifmModal');\r\n    const { message, onAccept, closeModalWithEsc } = this.props;\r\n\r\n    const title = ` Are you sure you want to ${message}`;\r\n\r\n    const modal = this.state.isVisible && (\r\n      <div\r\n        className=\"Background\"\r\n        onKeyPress={ closeModalWithEsc }\r\n        onClick={ () => this.setVisibility(false) }\r\n      >\r\n        <div className=\"Foreground\" onClick={ e => e.stopPropagation() }>\r\n          <button className=\"ExitButton\" onClick={ () => this.setVisibility(false) }>X</button>\r\n          <h2 className=\"ModalMessage\">{title}</h2>\r\n          <div>\r\n            <button onClick={ () => this.setVisibility(false) } className=\"ModalButton_No\" >\r\n              Nope\r\n            </button>\r\n            <button onClick={ onAccept } className=\"ModalButton_Yes\">\r\n              Yep\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div >\r\n        {modal}\r\n        <div onClick={ () => this.setVisibility(true) }>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmationModal;","/* eslint-disable no-plusplus */ /* eslint-disable react/no-direct-mutation-state */\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { TaskModel } from './models/todo';\r\nimport InputTodo from './components/InputTodo';\r\nimport TodoListPanel from './components/TodoListPanel';\r\nimport FilterPanel from './components/FilterPanel';\r\nimport ClearButton from './components/ClearButton';\r\nimport ConfirmationModal from './components/ConfirmationModal';\r\nimport './style.css';\r\nimport { submitTask, pressClear, toggleTask } from './actions';\r\n\r\nclass TodoList extends Component {\r\n  static propTypes = {\r\n    writeTask: PropTypes.func,\r\n    submitTask: PropTypes.func,\r\n    toggleTask: PropTypes.func,\r\n    clear: PropTypes.func,\r\n    history: PropTypes.object,\r\n    location: PropTypes.object,\r\n    listOfTasks: PropTypes.object,\r\n    inputTask: PropTypes.string\r\n  }\r\n\r\n  state = {\r\n    task: '',\r\n    id: 0,\r\n  }\r\n\r\n  handleTask = e => { this.setState({ task: e.target.value }); }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.submitTask(new TaskModel({ description: this.state.task, id: ++this.state.id }));\r\n    this.setState({ task: '' });\r\n  }\r\n\r\n  handleDone = (e) => { this.props.toggleTask(e.target.dataset.value); }\r\n\r\n  handleClear = () => { this.props.clear(); this.setState({ id: 0 }); }\r\n\r\n  handleModal = () => { this.setState({ modalIsOpen: !this.state.modalIsOpen }); }\r\n\r\n  goToHome = () => { this.props.history.push('/'); }\r\n\r\n  shouldComponentUpdate() {\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { location } = this.props;\r\n    const filterParam = new URLSearchParams(location.search).get('filter');\r\n    const filteredList = this.props.listOfTasks.filter((task) => {\r\n      if (filterParam === 'completed') { return task.isDone === true; }\r\n      if (filterParam === 'uncompleted') { return task.isDone === false; }\r\n      return true;\r\n    });\r\n\r\n    return (\r\n      <div onKeyDown={ this.closeModalWithEsc }>\r\n        <h1 className=\"todoTitle\">todos</h1>\r\n        <div className=\"todoClearbutton\">\r\n          <ConfirmationModal message=\"delete all your todos?\" onAccept={ this.handleClear }>\r\n            <ClearButton />\r\n          </ConfirmationModal>\r\n        </div>\r\n        <div className=\"todoContainer\">\r\n          <InputTodo todo={ this.state.task }\r\n            handleTask={ this.handleTask }\r\n            onSubmit={ this.onSubmit } />\r\n          <TodoListPanel handleDone={ this.handleDone } list={ filteredList } />\r\n          <FilterPanel onClick={ this.handleFilter }\r\n            numberOfItems={ filteredList.size }\r\n            selectedFilter={ filterParam } />\r\n        </div>\r\n        {this.props.listOfTasks.size >= 1\r\n          ? <ConfirmationModal message=\"exit??\" onAccept={ this.goToHome }>\r\n            <button className=\"homeButton\">  Home  </button>\r\n          </ConfirmationModal>\r\n          : <button onClick={ this.goToHome } className=\"homeButton\"> Home </button>\r\n        }\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clear: () => dispatch(pressClear()),\r\n  submitTask: (value) => dispatch(submitTask(value)),\r\n  toggleTask: (value) => dispatch(toggleTask(value))\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  inputTask: state.Todo.inputTask,\r\n  listOfTasks: state.Todo.listOfTasks\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import {\r\n  TOGGLE_TODO, ADD_TODO, CLEAR\r\n} from '../actionTypes';\r\n\r\nexport const submitTask = (task) => ({\r\n  type: ADD_TODO,\r\n  payload: task,\r\n});\r\n\r\nexport const pressClear = (list) => ({\r\n  type: CLEAR,\r\n  payload: list,\r\n});\r\n\r\nexport const toggleTask = (id) => ({\r\n  type: TOGGLE_TODO,\r\n  payload: id\r\n});\r\n","export const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const CLEAR = 'CLEAR';","import React, { Component, Fragment } from 'react';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport Calculator from './Calculator';\r\nimport TodoList from './TodoList';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Fragment>\r\n        <main className=\"main\">\r\n          <Switch>\r\n            <Route exact={ true } path=\"/\">\r\n              <div className=\"appContainer\">\r\n                <h1 className=\"appTitle\"> Hi! This is Basics for your day. </h1 >\r\n                <h2 className=\"appSubtitle\"> What do you want? </h2>\r\n                <ul className=\"appList\">\r\n                  <li className=\"appElement\">\r\n                    <Link to=\"/calculator\"\r\n                      className=\"appElement\">Calculator!</Link>\r\n                  </li>\r\n                  <li className=\"appElement\">\r\n                    <Link to=\"/todolist\"\r\n                      className=\"appElement\">To do List!</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </Route>\r\n            < Route exact={ true } path=\"/calculator\" component={ Calculator } />\r\n            < Route exact={ true } path=\"/todolist\" component={ TodoList } />\r\n          </Switch>\r\n        </main>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n  // [::1] is the IPv6 localhost address.\r\n  || window.location.hostname === '[::1]'\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  || window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n            + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      // eslint-disable-next-line no-param-reassign\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { Record } from 'immutable';\r\n\r\nexport const CalculatorModel = Record({\r\n  firstOperationNumber: 0,\r\n  secondOperationNumber: '',\r\n  operator: '',\r\n});\r\n\r\nexport const initialStateCalculator = new CalculatorModel();","import { initialStateCalculator } from '../models';\r\n\r\nconst symbolToOperate = {\r\n  '+': (a, b) => a + b,\r\n  '-': (a, b) => a - b,\r\n  '*': (a, b) => a * b,\r\n  '/': (a, b) => a / b\r\n};\r\n\r\nconst Calculator = (state = initialStateCalculator, action) => {\r\n  if (action.type === 'PRESS_CLEAR') {\r\n    if (state.firstOperationNumber !== 0) return state.clear();\r\n  }\r\n  if (action.type === 'PRESS_NUMBER') {\r\n    if (state.firstOperationNumber === 0 && state.operator === '') {\r\n      return state\r\n        .set('firstOperationNumber', Number(action.payload));\r\n    } if (state.firstOperationNumber !== 0 && state.operator === '') {\r\n      return state\r\n        .set('firstOperationNumber', Number(state.firstOperationNumber + action.payload));\r\n    }\r\n    if (state.operator !== '' && state.secondOperationNumber === 0) {\r\n      return state\r\n        .set('firstOperationNumber', state.firstOperationNumber)\r\n        .set('secondOperationNumber', action.payload)\r\n        .set('operator', state.operator);\r\n    } if (state.operator !== '' && state.secondOperationNumber !== 0) {\r\n      return state\r\n        .set('firstOperationNumber', state.firstOperationNumber)\r\n        .set('secondOperationNumber', state.secondOperationNumber + action.payload)\r\n        .set('operator', state.operator);\r\n    }\r\n  } if (action.type === 'SELECT_OPERATOR') {\r\n    return state\r\n      .set('firstOperationNumber', state.firstOperationNumber)\r\n      .set('operator', action.payload);\r\n  }\r\n  if (action.type === 'PRESS_EQUAL') {\r\n    try {\r\n      if (state.operator && state.secondOperationNumber) {\r\n        const selectedOperator = symbolToOperate[state.operator];\r\n        const resultOperation = String(selectedOperator(Number(state.firstOperationNumber),\r\n          Number(state.secondOperationNumber)));\r\n        return state\r\n          .set('firstOperationNumber', Number(resultOperation))\r\n          .set('secondOperationNumber', '')\r\n          .set('operator', '');\r\n      }\r\n    } catch (error) {\r\n      return state.set('firstOperationNumber', 'OH NO!!!!!!!!!');\r\n    }\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default Calculator;","import { Record, List } from 'immutable';\r\n\r\nexport const TodoModel = Record({\r\n  listOfTasks: List()\r\n});\r\n\r\nexport const initialTodoModel = new TodoModel();\r\n","import { initialTodoModel } from '../models';\r\n\r\nconst TodoList = (state = initialTodoModel, action) => {\r\n  if (action.type === 'CLEAR') {\r\n    return state.update('listOfTasks', taskList => taskList.clear());\r\n  }\r\n  if (action.type === 'ADD_TODO') {\r\n    return state\r\n      .update('listOfTasks', taskList => taskList.push(action.payload));\r\n  }\r\n  if (action.type === 'TOGGLE_TODO') {\r\n    // para actualizar el estado, hay que entrar en la list (con 'listOfTasks', tasklist).\r\n    // una vez dentro, a task list le puedo pasar una función para que haga lo que quiero:\r\n    // que se actualice la tasklist unicamente actualizando el isDone a lo contrario \r\n    // que tenga el booleano: si es true, a false, y si es false, a true. Si quiero cambiar algo, \r\n    // puedo hacer arrowFunctions que ayuden a hacerlo correctamente, como en este caso.\r\n    return state\r\n      .update('listOfTasks', tasklist => {\r\n        const index = tasklist.findIndex(task => task.id === Number(action.payload));\r\n        return tasklist.update(index, task => task.update('isDone', isDone => !isDone));\r\n      });\r\n\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default TodoList;","import { combineReducers } from 'redux';\r\nimport Calculator from '../containers/Calculator/reducers';\r\nimport Todo from '../containers/TodoList/reducers';\r\n\r\n\r\nexport default combineReducers({ Calculator, Todo });\r\n","import { initialStateCalculator } from '../containers/Calculator/models';\r\nimport { initialTodoModel } from '../containers/TodoList/models/index.js';\r\n\r\nexport const initialState = {\r\n  Calculator: initialStateCalculator,\r\n  Todo: initialTodoModel\r\n};","/* eslint-disable no-underscore-dangle */\r\nimport { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport { initialState } from '../models';\r\n\r\nconst store = createStore(\r\n  rootReducer, initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './containers/App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Provider store={ store }>\r\n      <App />\r\n    </Provider>\r\n  </HashRouter>, document.getElementById('root')\r\n);\r\nserviceWorker.unregister();"],"sourceRoot":""}